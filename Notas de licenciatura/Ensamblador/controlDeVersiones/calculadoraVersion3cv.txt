; // auxiliar urgente....


.MODEL
.STACK 64
.DATA

;DECLARACION DE VARIABLES--------------------------------------

NUM1     DB ?
NUM2     DB ?
SIGNO    DB ?,'$'
SIGNO2   DB ?,'$'
;SUMA     DB ?
;RESTA    DB ?
;MULTI    DB ?
;DIVISION DB ?
MODULO   DB ?
; originalmente ibamos a guardar
; los resultados en las 4 variables distinas
; pero eso aumentaria muchas lineas de codigo
; asi que dejaremos todos esos resultados en
; esta variable
RESULTADO DB ?




;MENSAJES PARA PEDIR LOS DATOS---------------------------------
MSJN1 DB 10,13, "DAME EL PRIMER NUMERO  : ",'$'
MSJOP DB 10,13, "DAME EL SIGNO          : ",'$'       
MSJN3 DB 10,13, "DAME EL SEGUNDO NUMERO: ",'$'
ERROR DB 10,13, "ERROR...OPERACION INVALIDA",13,10, '$'
SALIR DB 10,13, "PRESIONA '#' PARA SALIR O CUALQUIER OTRA TECLA PARA CONTINUAR",13,10,'$'

;MENSAJES PARA MOSTRAR LOS RESULTADOS EN PANTALLA--------------    
MSJNS DB " + ",'$'    
MSJNR DB " - ",'$'
MSJNM DB " * ",'$'
MSJND DB " / ",'$'
MSJNMOD DB ". ",'$'
MSJNIGUAL DB " = ",'$'

;AUXILIARES NECESARIOS EN LA EJECUCION
AUXENTER DB 10,13, "",'$'
AUXRES DB ? 



.CODE        
INICIO PROC FAR
    ;DIRECCIONAMIENTO DEL PROCEDIMIENTO 
OTRO:
    MOV AX, @DATA
    MOV DS,AX 
    
    ;MOSTRAMOS EL MENSAJE DE SALIDA POR PRIMERA VEZ
    MOV AH, 09
    LEA DX,SALIR
    ;MOSTRAMOS EL MENSAJE DE SALIDA PERO DENTRO DEL BUCLE
    MOV AH, 09
    LEA DX,SALIR
    INT 21H
    MOV AH, 01
    INT 21H
    MOV SIGNO2,AL
    
        
    CMP SIGNO2, '#' ;FIN DEL PROGRAMA
    JE FIN
    
    ;PEDIMOS EL NUMERO 1 =======================
    
    MOV AH, 09     ; servicio interrupcion 21h, que imprime cadenas
    LEA DX, MSJN1  ; imprimimos "dame numero 1" (o algo asi)
    INT 21H          
    MOV AH, 01H    ; servicio interrupcion 21h, que lee el dato 
    INT 21H        ; en este caso... NUM1
    
    ; dependiendo del rango del numero dado; (decimal o hexadecimal)...
    ; hacemos la resta necesaria correspondiente
    
    CMP AL, 39H
    JBE RESN1RAND  ; brincamos a "resta de numero 1 rango decimal"
    CMP AL, 41H
    JAE RESN1RANH  ; brincamos a "resta de numero 1 rango hexadecimal"
    
    
        RESN1RAND: ; aqui hacemos la "resta de numero 1 rango decimal" 
        SUB AL, 30H
        MOV NUM1, AL
        JMP RETORNO1 ; Con "RETORNO1" vamos a la parte de leer el signo
        ;[seguro borrar]MOV BL,NUM1
        
        RESN1RANH: ; aqui naturalmente hacemos lo mismo pero para el
        SUB AL,37H ; rango hexadecimal
        MOV NUM1, AL
        ;(aqui no necesitamos invocar RETORNO1
        ; pues inmediatamente despues de esto
        ; leemos el signo
        ; lo mencionamos para dejar claro el uso
        ; de RETORNO1 y de la instruccion JMP
        ; en general)JMP RETORNO1
        
    RETORNO1:    
    
    ;PEDIMOS EL SIGNO DE LA OPERACION ==========
    MOV AH, 09H
    LEA DX,MSJOP
    INT 21H
    MOV AH, 01
    INT 21H
    MOV SIGNO,AL
    
    
    ;PEDIMOS EL NUMERO 2 =======================
    ;(naturalmente esta parte del proceso es
    ; exactamente igual a la del numero 1)
    
    MOV AH, 09     ; servicio interrupcion 21h, que imprime cadenas
    LEA DX, MSJN3  ; imprimimos: "dame numero 2" (o algo asi jaja)
    INT 21H
    MOV AH, 01     
    INT 21H        ; servicio interrupcion 21h , lee NUM2...
    
    ; dependiendo del rango del numero dado; (decimal o hexadecimal)...
    ; hacemos la resta necesaria correspondiente
    ; COMO DIJIMOS, ES IGUAL QUE CON EL NUMERO 1
    
    CMP AL, 39H
    JBE RESN2RAND  ; brincamos a "resta de numero 1 rango decimal"
    CMP AL, 41H
    JAE RESN2RANH  ; brincamos a "resta de numero 1 rango hexadecimal"
        
        
        RESN2RAND: ; aqui hacemos la "resta de numero 2 rango decimal" 
        SUB AL, 30H
        MOV NUM2, AL ; guardamos el dato en NUM2
        JMP RETORNO2 ; con esto vamos a la parte de validacion del signo
        
        RESN2RANH: ; creo que ya se enendio la idea ;)
        SUB AL,37H 
        MOV NUM2, AL   
    
    
    RETORNO2:              
                 
    ;HACEMOS LA VALIDACION DEL SIGNO
    CMP SIGNO,'+' 
    JE HACER_SUMA
     
    CMP SIGNO,'-' 
    JE HACER_RESTA
    
    CMP SIGNO,'*' 
    JE HACER_MULTIPLICACION 
    
    CMP SIGNO,'/' 
    JE HACER_DIVISION 
    
    MOV AH,09H
    LEA DX, ERROR
    INT 21H
    JMP OTRO  
    
                  
    ;HACEMOS LAS OPERACIONES 
         
HACER_SUMA: 
        ; todo esto es para imprimir la segunda parte
        ; de la operacion con el formato bonito
        
        ; todas las operaciones se manejaran de esa forma...
        
        MOV AH,09
        LEA DX,AUXENTER
        INT 21H
        
        MOV DL,NUM1
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNS
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H
        
        ;operamos suma
        MOV AL, NUM1        
        ADD AL, NUM2             
        MOV RESULTADO, AL      
        
        SHR AL,4H            ;Usamos "shift right" para obtener el digito de la derecha  
        MOV AUXRES, AL            
        MOV BL, RESULTADO      
        AND BL,00001111B     ;Usamos "and "para obtener el digito de la derecha    
        MOV RESULTADO, BL
            
        JMP CONVRES1
                     
        
HACER_RESTA:        
        ;imprimir con formato bonito...        
        MOV AH,09
        LEA DX,AUXENTER
        INT 21H
        
        MOV DL,NUM1
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNR
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H
        
        ; operamos resta
        MOV AL, NUM1    
        SUB AL, NUM2    
        MOV RESULTADO, AL    
        
        SHR AL,4H             ;Usamos "shift right" para obtener el digito de la derecha
        MOV AUXRES, AL      
        MOV BL, RESULTADO    
        AND BL,00001111B      ;Usamos "and "para obtener el digito de la derecha   
        MOV RESULTADO, BL
            
        JMP CONVRES1
        
        
HACER_MULTIPLICACION:
        ; imprimimos...
        MOV AH,09
        LEA DX,AUXENTER
        INT 21H
        
        MOV DL,NUM1
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNM
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
                
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H       
        
        ;Operamos multiplicacion...      
        MOV AL, NUM1    
        MOV BL, NUM2    
        MUL BL          
        MOV RESULTADO, AL      
        
        SHR AL,4H             ;Usamos "shift right" para obtener el digito de la derecha
        MOV AUXRES, AL    
        MOV BL, RESULTADO   
        AND BL,00001111B      ;Usamos "and "para obtener el digito de la derecha
        MOV RESULTADO, BL
           
        JMP CONVRES1 

        
HACER_DIVISION:
        ; imprimimos parte entera...
        MOV AH,09
        LEA DX,AUXENTER
        INT 21H
        
        MOV DL,NUM1
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJND
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H
        
        ; Operamos division  
        XOR AX, AX     ; XOR se usa para limiar el registro AX
                       ; porque la division siempre presenta 
                       ; muchas dificultades por motivos que 
                       ; ignoramos jajaj 
        MOV AL, NUM1
        MOV BL, NUM2
        DIV BL
        MOV RESULTADO, AL   
        SHR AL,4            ; usamos shift right...... 
        MOV AUXRES, AL    
        MOV BL, RESULTADO  
        AND BL,00001111B    ; usamos and....
        MOV RESULTADO, BL
               
        JMP CONVRES1 

        ; ===========================
        ; OPERAMOS RESIDUO...
        ;MOV AL,BL
        ;DIV BH
        ;MOV MODULO,AH
        ; ahora LO IMPRIMIMOS..
        ;MOV AH,09
        ;LEA DX,MSJNMOD
        ;INT 21H
        ;MOV DL,MODULO
        ;ADD DL,30H
        ;MOV AH,02
        ;INT 21H
        ;JMP OTRO
        
CONVRES1:  ; empezamos proceso de conversion

MOV AL, AUXRES    
CMP AL, 09H          
JBE SRRAND1     ;Si el resultado esta en un rango decimal, hacemos el proceso decimal   
JMP SRRANH1     ;Si el resultado esta en rango hexadecimal, hacemos el hexadecimal
    
    SRRAND1:

    MOV DL, AUXRES    ;HAY QUE PONER EN "DL" LO QUE QUEREMOS IMPRIMIR EN CODIGO ASCII          
    ADD DL, 30H     ;LE SUMAMOS 30H PARA HACER LA CONVERSION DE HEXA A ASCII    
    MOV AUXRES,DL   ;MOVEMOS A RESULTADO EL RESULTADO PERO YA CON LA CONVERSION    
    
    MOV DL, AUXRES   ;MOVEMOS A DL RESULTADO YA QUE EN DL DEBEMOS ALOJAR EL CARACTER A IMPRIMIR    
    MOV AH, 02H     ;SERVICIO QUE IMPRIME UN CARACTER 
    INT 21H    
    JMP CONVRES2


    SRRANH1: 

    MOV DL, AUXRES ;HAY QUE PONER EN "DL" LO QUE QUEREMOS IMPRIMIR EN CODIGO ASCII
    ADD DL, 37H     ;LE SUMAMOS 37H PARA HACER LA CONVERSION DE HEXA A ASCII     
    MOV AUXRES,DL   ;MOVEMOS A RESULTADO EL RESULTADO PERO YA CON LA CONVERSION    

    MOV DL, AUXRES   ;MOVEMOS A DL RESULTADO YA QUE EN DL DEBEMOS ALOJAR EL CARACTER A IMPRIMIR    
    MOV AH, 02H     ;SERVICIO QUE IMPRIME UN CARACTER 
    INT 21H    
    ;JMP CONVRES2
    
;===============
CONVRES2:

MOV AL, RESULTADO    
CMP AL, 09H          
JBE SRRAND2     ;SI RESULTADO ES MENOR O IGUAL A 09H SALTAMOS A SUMA30H    
JMP SRRANH2     ;SALTO SIN RESTRICCION, SE EJECUTA SI NO SALTA LA INSTRUCCION ANTERIOR  
    
    SRRAND2:

    MOV DL, RESULTADO    ;HAY QUE PONER EN "DL" LO QUE QUEREMOS IMPRIMIR EN CODIGO ASCII          
    ADD DL, 30H     ;LE SUMAMOS 30H PARA HACER LA CONVERSION DE HEXA A ASCII    
    MOV RESULTADO,DL   ;MOVEMOS A RESULTADO EL RESULTADO PERO YA CON LA CONVERSION   
    MOV DL, RESULTADO   ;MOVEMOS A DL RESULTADO YA QUE EN DL DEBEMOS ALOJAR EL CARACTER A IMPRIMIR    
    MOV AH, 02H     ;SERVICIO QUE IMPRIME UN CARACTER 
    INT 21H    
    JMP VAL ; estamos a punto de terminar el proceso


    SRRANH2: 

    MOV DL, RESULTADO ;HAY QUE PONER EN "DL" LO QUE QUEREMOS IMPRIMIR EN CODIGO ASCII
    ADD DL, 37H     ;LE SUMAMOS 37H PARA HACER LA CONVERSION DE HEXA A ASCII    
    MOV RESULTADO,DL   ;MOVEMOS A RESULTADO EL RESULTADO PERO YA CON LA CONVERSION   
    MOV DL, RESULTADO   ;MOVEMOS A DL RESULTADO YA QUE EN DL DEBEMOS ALOJAR EL CARACTER A IMPRIMIR    
    MOV AH, 02H     ;SERVICIO QUE IMPRIME UN CARACTER 
    INT 21H    


VAL: ; La unica funcion de val, es saltar a la parte de Validar si se repetira el proceso 
JMP OTRO
    
;CIERRE DEL PROGRAMA
FIN:
MOV AH,4CH
INT 21H

INICIO ENDP 

END



















































; /// segundo auxiliar, cada vez mejor ======================================================================

.MODEL
.STACK 64
.DATA

;DECLARACION DE VARIABLES--------------------------------------

NUM1     DB ?
NUM2     DB ?
SIGNO    DB ?,'$'
SIGNO2   DB ?,'$'
 ;SUMA     DB ?
 ;RESTA    DB ?
 ;MULTI    DB ?
 ;DIVISION DB ?
MODULO   DB ?
; originalmente ibamos a guardar
; los resultados en las 4 variables distinas
; pero eso aumentaria muchas lineas de codigo
; asi que dejaremos todos esos resultados en
; esta variable
RESULTADO DB ?

;MENSAJES PARA PEDIR LOS DATOS---------------------------------
MSJN1 DB 10,13, "DAME EL PRIMER NUMERO  : ",'$'
MSJOP DB 10,13, "DAME EL SIGNO          : ",'$'       
MSJN3 DB 10,13, "DAME EL SEGUNDO NUMERO: ",'$'
ERROR DB 10,13, "ERROR...OPERACION INVALIDA",13,10, '$'
SALIR DB 10,13, "PRESIONA '#' PARA SALIR O CUALQUIER OTRA TECLA PARA CONTINUAR",13,10,'$'

;MENSAJES PARA MOSTRAR LOS RESULTADOS EN PANTALLA--------------    
MSJNS DB " + ",'$'    
MSJNR DB " - ",'$'
MSJNM DB " * ",'$'
MSJND DB " / ",'$'
MSJNMOD DB ". ",'$'
MSJNIGUAL DB " = ",'$'

;AUXILIARES NECESARIOS EN LA EJECUCION
AUXENTER DB 10,13, "",'$'
AUXRES DB ? 



.CODE        
INICIO PROC FAR
    ;DIRECCIONAMIENTO DEL PROCEDIMIENTO 
OTRO:
    MOV AX, @DATA
    MOV DS,AX 
    
    ;MOSTRAMOS EL MENSAJE DE SALIDA POR PRIMERA VEZ
    MOV AH, 09
    LEA DX,SALIR
    ;MOSTRAMOS EL MENSAJE DE SALIDA PERO DENTRO DEL BUCLE
    MOV AH, 09
    LEA DX,SALIR
    INT 21H
    MOV AH, 01
    INT 21H
    MOV SIGNO2,AL
    
        
    CMP SIGNO2, '#' ;FIN DEL PROGRAMA
    JE FIN
    
    ;PEDIMOS EL NUMERO 1 =======================
    
    MOV AH, 09     ; servicio interrupcion 21h, que imprime cadenas
    LEA DX, MSJN1  ; imprimimos "dame numero 1" (o algo asi)
    INT 21H          
    MOV AH, 01H    ; servicio interrupcion 21h, que lee el dato 
    INT 21H        ; en este caso... NUM1
    
    ; dependiendo del rango del numero dado; (decimal o hexadecimal)...
    ; hacemos la resta necesaria correspondiente
    
    CMP AL, 39H
    JBE RESN1RAND  ; brincamos a "resta de numero 1 rango decimal"
    CMP AL, 41H
    JAE RESN1RANH  ; brincamos a "resta de numero 1 rango hexadecimal"
    
    
        RESN1RAND: ; aqui hacemos la "resta de numero 1 rango decimal" 
        SUB AL, 30H
        MOV NUM1, AL
        JMP RETORNO1 ; Con "RETORNO1" vamos a la parte de leer el signo
        
        RESN1RANH: ; aqui naturalmente hacemos lo mismo pero para el
        SUB AL,37H ; rango hexadecimal
        MOV NUM1, AL
        ;(aqui no necesitamos invocar RETORNO1
        ; pues inmediatamente despues de esto
        ; leemos el signo
        ; lo mencionamos para dejar claro el uso
        ; de RETORNO1 y de la instruccion JMP
        ; en general)JMP RETORNO1
        
    RETORNO1:    
    
    ;PEDIMOS EL SIGNO DE LA OPERACION ==========
    MOV AH, 09H
    LEA DX,MSJOP
    INT 21H
    MOV AH, 01
    INT 21H
    MOV SIGNO,AL
    
    
    ;PEDIMOS EL NUMERO 2 =======================
    ;(naturalmente esta parte del proceso es
    ; exactamente igual a la del numero 1)
    
    MOV AH, 09     ; servicio interrupcion 21h, que imprime cadenas
    LEA DX, MSJN3  ; imprimimos: "dame numero 2" (o algo asi jaja)
    INT 21H
    MOV AH, 01     
    INT 21H        ; servicio interrupcion 21h , lee NUM2...
    
    ; dependiendo del rango del numero dado; (decimal o hexadecimal)...
    ; hacemos la resta necesaria correspondiente
    ; COMO DIJIMOS, ES IGUAL QUE CON EL NUMERO 1
    
    CMP AL, 39H
    JBE RESN2RAND  ; brincamos a "resta de numero 1 rango decimal"
    CMP AL, 41H
    JAE RESN2RANH  ; brincamos a "resta de numero 1 rango hexadecimal"
        
        
        RESN2RAND: ; aqui hacemos la "resta de numero 2 rango decimal" 
        SUB AL, 30H
        MOV NUM2, AL ; guardamos el dato en NUM2
        JMP RETORNO2 ; con esto vamos a la parte de validacion del signo
        
        RESN2RANH: ; creo que ya se enendio la idea ;)
        SUB AL,37H 
        MOV NUM2, AL   
    
    
    
    
    RETORNO2:
    
    ; para ahorrar lineas, empezamos a escribir el numero 1
    ; despues en los modulos de cada operacion se imprimira
    ; el signo correspondiente, el numero 2 y el signo igual
    MOV AH,09
    LEA DX,AUXENTER ; imprimimos salto de linea
    INT 21H
    
    MOV AL ,NUM1
    CMP AL, 39H
    JBE IMPNUM1D  ; Si el numero 1 esta en decimal, lo imprimimo en decimal
    CMP AL, 41H
    JAE IMPNUM1H  ; si esta en hexadecima, lo imprimimos en hexadecimal, daah
        
        IMPNUM1D:
        MOV DL,NUM1
        ADD DL,30H
        MOV AH,02       ; imprimimos en decimal
        INT 21H
        JMP RETORNO3
        
        IMPNUM1H:
        MOV DL,NUM1
        ADD DL,37H
        MOV AH,02       ; imprimimos en hexadecimal
        INT 21H
        JMP RETORNO3
        
        ;NOTA: haremos lo mismo con el numero 2 en unos momentos... 
                     
    RETORNO3:
                 
    ;HACEMOS LA VALIDACION DEL SIGNO
    CMP SIGNO,'+' 
    JE HACER_SUMA
     
    CMP SIGNO,'-' 
    JE HACER_RESTA
    
    CMP SIGNO,'*' 
    JE HACER_MULTIPLICACION 
    
    CMP SIGNO,'/' 
    JE HACER_DIVISION 
    
    MOV AH,09H
    LEA DX, ERROR
    INT 21H
    JMP OTRO  
    
                  
    ;HACEMOS LAS OPERACIONES 
         
HACER_SUMA:
        ; >>>>   todas las operaciones se manejaran de la forma    <<<<
        ; >>>>   que se muestra a continuacion...                  <<<<
        
        ; esto es para imprimir la segunda parte
        ; de la operacion con el formato bonito
        
        MOV AH,09       
        LEA DX,MSJNS   ; imprimimos signo, en este caso suma
        INT 21H
        
        MOV DL,NUM2    ; imprimimos numero 2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL ; imprimimos signo de igual
        INT 21H
        
        ;operamos suma
        MOV AL, NUM1        
        ADD AL, NUM2             
        MOV RESULTADO, AL      
        
        SHR AL,4H            ;Usamos "shift right" para obtener el digito de la derecha  
        MOV AUXRES, AL            
        MOV BL, RESULTADO      
        AND BL,00001111B     ;Usamos "and "para obtener el digito de la derecha    
        MOV RESULTADO, BL
            
        JMP CONVRES1   ; CONVRES1 sera en donde empieze el proceso de imprimir el
                       ; resultado
                     
        
HACER_RESTA:        
        ;imprimir con formato bonito...        
        
        MOV AH,09
        LEA DX,MSJNR
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H
        
        ; operamos resta
        MOV AL, NUM1    
        SUB AL, NUM2    
        MOV RESULTADO, AL    
        
        SHR AL,4H             ;Usamos "shift right" para obtener el digito de la derecha
        MOV AUXRES, AL      
        MOV BL, RESULTADO    
        AND BL,00001111B      ;Usamos "and "para obtener el digito de la derecha   
        MOV RESULTADO, BL
            
        JMP CONVRES1
        
        
HACER_MULTIPLICACION:
        ; imprimimos...
        
        MOV AH,09
        LEA DX,MSJNM
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
                
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H       
        
        ;Operamos multiplicacion...      
        MOV AL, NUM1    
        MOV BL, NUM2    
        MUL BL          
        MOV RESULTADO, AL      
        
        SHR AL,4H             ;Usamos "shift right" para obtener el digito de la derecha
        MOV AUXRES, AL    
        MOV BL, RESULTADO   
        AND BL,00001111B      ;Usamos "and "para obtener el digito de la derecha
        MOV RESULTADO, BL
           
        JMP CONVRES1 

        
HACER_DIVISION:
        ; imprimimos parte entera...
        
        MOV AH,09
        LEA DX,MSJND
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H
        
        ; Operamos division  
        XOR AX, AX     ; XOR se usa para limiar el registro AX
                       ; porque la division siempre presenta 
                       ; muchas dificultades por motivos que 
                       ; ignoramos jajaj 
        MOV AL, NUM1
        MOV BL, NUM2
        DIV BL
        MOV RESULTADO, AL   
        SHR AL,4            ; usamos shift right...... 
        MOV AUXRES, AL    
        MOV BL, RESULTADO  
        AND BL,00001111B    ; usamos and....
        MOV RESULTADO, BL
               
        JMP CONVRES1 

        ; ===========================
        ; OPERAMOS RESIDUO...
        ;MOV AL,BL
        ;DIV BH
        ;MOV MODULO,AH
        ; ahora LO IMPRIMIMOS..
        ;MOV AH,09
        ;LEA DX,MSJNMOD
        ;INT 21H
        ;MOV DL,MODULO
        ;ADD DL,30H
        ;MOV AH,02
        ;INT 21H
        ;JMP OTRO
        
CONVRES1:  ; empezamos proceso de conversion del resultado 

MOV AL, AUXRES    
CMP AL, 09H          
JBE SRRAND1     ;Si el resultado esta en un rango decimal, hacemos el proceso decimal   
JMP SRRANH1     ;Si el resultado esta en rango hexadecimal, hacemos el hexadecimal
    
    SRRAND1:

    MOV DL, AUXRES              
    ADD DL, 30H     ;Sumamos 30h porque es la conversion correspondiente    
    MOV AUXRES,DL   ;guardamos el resultado en AUXRES    
    
    MOV DL, AUXRES      
    MOV AH, 02H     ;imprimimos el caracter que toca imprimir... el de la izquierda 
    INT 21H    
    JMP CONVRES2


    SRRANH1: 

    MOV DL, AUXRES  
    ADD DL, 37H     ;sumamos 37h porque es la conversion que corresponde 
    MOV AUXRES,DL   ;guardamos el resultado en AUXRES   

    MOV DL, AUXRES       
    MOV AH, 02H     ;imprimimos el caracter que toca imprimir... el de la izquierda
    INT 21H    
    
    

CONVRES2:

MOV AL, RESULTADO    
CMP AL, 09H          
JBE SRRAND2     ;Si el resultado esta en un rango decimal, hacemos el proceso decimal   
JMP SRRANH2     ;Si el resultado esta en un rango hexadecimal, lo hacemos en hexadecimal 
    
    SRRAND2:

    MOV DL, RESULTADO              
    ADD DL, 30H         ;Sumamos 30h porque es la conversion correspondiente  
    MOV RESULTADO,DL      
    MOV DL, RESULTADO     
    MOV AH, 02H        ; imprimimos el caracter que faltaba, el derecho
    INT 21H    
    JMP VAL ; saltamos a la validacion de repetir el proceso


    SRRANH2: 

    MOV DL, RESULTADO 
    ADD DL, 37H         ;Sumamos 37h porque es la conversion correspondiente 
    MOV RESULTADO,DL   
    MOV DL, RESULTADO       
    MOV AH, 02H          ; imprimimos el caracter que faltaba, el derecho
    INT 21H    


VAL: ; La unica funcion de val, es saltar a la parte de Validar si se repetira el proceso 
JMP OTRO
    
;CIERRE DEL PROGRAMA
FIN:
MOV AH,4CH
INT 21H

INICIO ENDP 

END























; // tercer auxiliar, no sé que tanta diferencia haya entre las 3 ==========================
; calculadora version 3.0
; fue la ultima en ser ejecutada
; no debería tener mayor problema

.MODEL
.STACK 64
.DATA

;DECLARACION DE VARIABLES--------------------------------------

NUM1     DB ?
NUM2     DB ?
SIGNO    DB ?,'$'
SIGNO2   DB ?,'$'
 ;SUMA     DB ?
 ;RESTA    DB ?
 ;MULTI    DB ?
 ;DIVISION DB ?

; originalmente ibamos a guardar
; los resultados en las 4 variables distinas
; pero eso aumentaria muchas lineas de codigo
; asi que dejaremos todos esos resultados en
; esta variable
RESULTADO DB ?

;MENSAJES PARA PEDIR LOS DATOS---------------------------------
MSJN1 DB 10,13, "DAME EL PRIMER NUMERO  : ",'$'
MSJOP DB 10,13, "DAME EL SIGNO          : ",'$'       
MSJN3 DB 10,13, "DAME EL SEGUNDO NUMERO: ",'$'
ERROR DB 10,13, "ERROR...OPERACION INVALIDA",13,10, '$'
SALIR DB 10,13, "PRESIONA '#' PARA SALIR O CUALQUIER OTRA TECLA PARA CONTINUAR",13,10,'$'

;MENSAJES PARA MOSTRAR LOS RESULTADOS EN PANTALLA--------------    
MSJNS DB " + ",'$'    
MSJNR DB " - ",'$'
MSJNM DB " * ",'$'
MSJND DB " / ",'$'
MSJNMOD DB ". ",'$'
MSJNIGUAL DB " = ",'$'

;AUXILIARES NECESARIOS EN LA EJECUCION
AUXENTER DB 10,13, "",'$'
AUXRES DB ?
AUXN1  DB ?
AUXN2  DB ? 



.CODE        
INICIO PROC FAR
    ;DIRECCIONAMIENTO DEL PROCEDIMIENTO 
OTRO:
    MOV AX, @DATA
    MOV DS,AX 
    
    ;MOSTRAMOS EL MENSAJE DE SALIDA POR PRIMERA VEZ
    MOV AH, 09
    LEA DX,SALIR
    ;MOSTRAMOS EL MENSAJE DE SALIDA PERO DENTRO DEL BUCLE
    MOV AH, 09
    LEA DX,SALIR
    INT 21H
    MOV AH, 01
    INT 21H
    MOV SIGNO2,AL
    
        
    CMP SIGNO2, '#' ;FIN DEL PROGRAMA
    JE FIN
    
    ;PEDIMOS EL NUMERO 1 =======================
    
    MOV AH, 09     ; servicio interrupcion 21h, que imprime cadenas
    LEA DX, MSJN1  ; imprimimos "dame numero 1" (o algo asi)
    INT 21H          
    MOV AH, 01H    ; servicio interrupcion 21h, que lee el dato 
    INT 21H        ; en este caso... NUM1
    
    
    ; dependiendo del rango del numero dado; (decimal o hexadecimal)...
    ; hacemos la resta necesaria correspondiente
    
    CMP AL, 39H
    JBE RESN1RAND  ; brincamos a "resta de numero 1 rango decimal"
    CMP AL, 41H
    JAE RESN1RANH  ; brincamos a "resta de numero 1 rango hexadecimal"
    
    
        RESN1RAND: ; aqui hacemos la "resta de numero 1 rango decimal" 
        SUB AL, 30H
        MOV NUM1, AL
        JMP RETORNO1 ; Con "RETORNO1" vamos a la parte de leer el signo
        
        RESN1RANH: ; aqui naturalmente hacemos lo mismo pero para el
        SUB AL,37H ; rango hexadecimal
        MOV NUM1, AL
        
        
    RETORNO1:    
    
    ;PEDIMOS EL SIGNO DE LA OPERACION ==========
    MOV AH, 09H
    LEA DX,MSJOP
    INT 21H
    MOV AH, 01
    INT 21H
    MOV SIGNO,AL
    
    
    ;PEDIMOS EL NUMERO 2 =======================
    ;(naturalmente esta parte del proceso es
    ; exactamente igual a la del numero 1)
    
    MOV AH, 09     ; servicio interrupcion 21h, que imprime cadenas
    LEA DX, MSJN3  ; imprimimos: "dame numero 2" (o algo asi jaja)
    INT 21H
    MOV AH, 01     
    INT 21H        ; servicio interrupcion 21h , lee NUM2...
    
    ; dependiendo del rango del numero dado; (decimal o hexadecimal)...
    ; hacemos la resta necesaria correspondiente
    ; COMO DIJIMOS, ES IGUAL QUE CON EL NUMERO 1
    
    CMP AL, 39H
    JBE RESN2RAND  ; brincamos a "resta de numero 1 rango decimal"
    CMP AL, 41H
    JAE RESN2RANH  ; brincamos a "resta de numero 1 rango hexadecimal"
        
        
        RESN2RAND: ; aqui hacemos la "resta de numero 2 rango decimal" 
        SUB AL, 30H
        MOV NUM2, AL ; guardamos el dato en NUM2
        JMP RETORNO2 ; con esto vamos a la parte de validacion del signo
        
        RESN2RANH: ; creo que ya se enendio la idea ;)
        SUB AL,37H 
        MOV NUM2, AL   
    
    
    
    
    RETORNO2:
    
    ; para ahorrar lineas, empezamos a escribir el numero 1
    ; despues en los modulos de cada operacion se imprimira
    ; el signo correspondiente, el numero 2 y el signo igual
    MOV AH,09
    LEA DX,AUXENTER ; imprimimos salto de linea
    INT 21H 

    MOV DL,NUM1    
    ADD DL,30H
    MOV AH,02
    INT 21H
                    
    ;HACEMOS LA VALIDACION DEL SIGNO
    CMP SIGNO,'+' 
    JE HACER_SUMA
     
    CMP SIGNO,'-' 
    JE HACER_RESTA
    
    CMP SIGNO,'*' 
    JE HACER_MULTIPLICACION 
    
    CMP SIGNO,'/' 
    JE HACER_DIVISION 
    
    MOV AH,09H
    LEA DX, ERROR
    INT 21H
    JMP OTRO  
    
                  
    ;HACEMOS LAS OPERACIONES 
         
HACER_SUMA:
        ; >>>>   todas las operaciones se manejaran de la forma    <<<<
        ; >>>>   que se muestra a continuacion...                  <<<<
        
        ; esto es para imprimir la segunda parte
        ; de la operacion con el formato bonito
        
        MOV AH,09       
        LEA DX,MSJNS   ; imprimimos signo, en este caso suma
        INT 21H
        
        MOV DL,NUM2    ; imprimimos numero 2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL ; imprimimos signo de igual
        INT 21H
          ; 0001
        ;operamos suma
        MOV AL, NUM1        
        ADD AL, NUM2             
        MOV RESULTADO, AL      
        
        SHR AL,4H            ;Usamos "shift right" para obtener el digito de la izquierda  
        MOV AUXRES, AL            
        MOV BL, RESULTADO      
        AND BL,00001111B     ;Usamos "and "para obtener el digito de la derecha    
        MOV RESULTADO, BL
            
        JMP CONVRES1   ; CONVRES1 sera en donde empieze el proceso de imprimir el
                       ; resultado
                     
        
HACER_RESTA:        
        ;imprimir con formato bonito...        
        
        MOV AH,09
        LEA DX,MSJNR
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H
        
        ; operamos resta
        MOV AL, NUM1    
        SUB AL, NUM2    
        MOV RESULTADO, AL    
        
        SHR AL,4H             ;Usamos "shift right" para obtener el digito de la derecha
        MOV AUXRES, AL      
        MOV BL, RESULTADO    
        AND BL,00001111B      ;Usamos "and "para obtener el digito de la derecha   
        MOV RESULTADO, BL
            
        JMP CONVRES1
        
        
HACER_MULTIPLICACION:
        ; imprimimos...
        
        MOV AH,09
        LEA DX,MSJNM
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
                
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H       
        
        ;Operamos multiplicacion...      
        MOV AL, NUM1    
        MOV BL, NUM2    
        MUL BL          
        MOV RESULTADO, AL      
        
        SHR AL,4H             ;Usamos "shift right" para obtener el digito de la derecha
        MOV AUXRES, AL    
        MOV BL, RESULTADO   
        AND BL,00001111B      ;Usamos "and "para obtener el digito de la derecha
        MOV RESULTADO, BL
           
        JMP CONVRES1 

        
HACER_DIVISION:
        ; imprimimos parte entera...
        
        MOV AH,09
        LEA DX,MSJND
        INT 21H
        
        MOV DL,NUM2
        ADD DL,30H
        MOV AH,02
        INT 21H
        
        MOV AH,09
        LEA DX,MSJNIGUAL
        INT 21H
        
        ; Operamos division  
        XOR AX, AX     ; XOR se usa para limiar el registro AX
                       ; porque la division siempre presenta 
                       ; muchas dificultades por motivos que 
                       ; ignoramos jajaj 
        MOV AL, NUM1
        MOV BL, NUM2
        DIV BL
        MOV RESULTADO, AL   
        SHR AL,4            ; usamos shift right...... 
        MOV AUXRES, AL    
        MOV BL, RESULTADO  
        AND BL,00001111B    ; usamos and....
        MOV RESULTADO, BL
               
        JMP CONVRES1
        
        
        
        
        
;IMPNUM2 

        
CONVRES1:  ; empezamos proceso de conversion del resultado 

MOV AL, AUXRES    
CMP AL, 09H          
JBE SRRAND1     ;Si el resultado esta en un rango decimal, hacemos el proceso decimal   
JMP SRRANH1     ;Si el resultado esta en rango hexadecimal, hacemos el hexadecimal
    
    SRRAND1:

    MOV DL, AUXRES              
    ADD DL, 30H     ;Sumamos 30h porque es la conversion correspondiente    
    MOV AUXRES,DL   ;guardamos el resultado en AUXRES    
    
    MOV DL, AUXRES      
    MOV AH, 02H     ;imprimimos el caracter que toca imprimir... el de la izquierda 
    INT 21H    
    JMP CONVRES2


    SRRANH1: 

    MOV DL, AUXRES  
    ADD DL, 37H     ;sumamos 37h porque es la conversion que corresponde 
    MOV AUXRES,DL   ;guardamos el resultado en AUXRES   

    MOV DL, AUXRES       
    MOV AH, 02H     ;imprimimos el caracter que toca imprimir... el de la izquierda
    INT 21H    
    
    

CONVRES2:

MOV AL, RESULTADO    
CMP AL, 09H          
JBE SRRAND2     ;Si el resultado esta en un rango decimal, hacemos el proceso decimal   
JMP SRRANH2     ;Si el resultado esta en un rango hexadecimal, lo hacemos en hexadecimal 
    
    SRRAND2:

    MOV DL, RESULTADO              
    ADD DL, 30H         ;Sumamos 30h porque es la conversion correspondiente  
    MOV RESULTADO,DL      
    MOV DL, RESULTADO     
    MOV AH, 02H        ; imprimimos el caracter que faltaba, el derecho
    INT 21H    
    JMP VAL ; saltamos a la validacion de repetir el proceso


    SRRANH2: 

    MOV DL, RESULTADO 
    ADD DL, 37H         ;Sumamos 37h porque es la conversion correspondiente 
    MOV RESULTADO,DL   
    MOV DL, RESULTADO       
    MOV AH, 02H          ; imprimimos el caracter que faltaba, el derecho
    INT 21H    


VAL: ; La unica funcion de val, es saltar a la parte de Validar si se repetira el proceso 
JMP OTRO
    
;CIERRE DEL PROGRAMA
FIN:
MOV AH,4CH
INT 21H

INICIO ENDP 

END